#
# Build GMT and run tests
#
name: Tests
on:
  push:
    # build master and 6.x branches
    branches:
      - master
      - 6.[0-9]+
      - github-actions  # TODO: remove this before merging
  pull_request:
  # schedule daily tests
  schedule:
    - cron: '0 12 * * *'

jobs:
  linux:
    name: Linux - ${{ matrix.name }}
    runs-on: ubuntu-latest

    env:
      COASTLINEDIR: ${{ github.workspace }}/coastline
      INSTALLDIR: ${{ github.workspace }}/gmt-install-dir

    strategy:
      matrix:
        include:
          # Compile only
          - name: Compile only
            BUILD_DOCS  : false
            DEPLOY_DOCS : false
            PACKAGE     : false
            RUN_TESTS   : false
          # Build docs + Deploy docs + Package
          - name: Build docs + Deploy docs + Package
            BUILD_DOCS  : true
            DEPLOY_DOCS : true
            PACKAGE     : true
            RUN_TESTS   : false
          # Test
          - name: Tests
            BUILD_DOCS  : false
            DEPLOY_DOCS : false
            PACKAGE     : false
            RUN_TESTS   : true

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends --no-install-suggests \
               build-essential cmake ninja-build libcurl4-gnutls-dev libnetcdf-dev \
               libgdal-dev libfftw3-dev libpcre3-dev liblapack-dev libglib2.0-dev \
               ghostscript curl

      - name: Install dependencies for running tests
        run: sudo apt-get install -y --no-install-recommends --no-install-suggests graphicsmagick gdal-bin
        if: matrix.RUN_TESTS == true

      - name: Install dependencies for building documentation
        run: |
          sudo apt-get install -y --no-install-recommends --no-install-suggests \
               python3-pip python3-setuptools python3-wheel graphicsmagick ffmpeg
          sudo snap install pngquant
          pip3 install --user sphinx==1.8.5
        if: matrix.BUILD_DOCS == true

      - name: Download coastlines
        run: bash ci/download-coastlines.sh

      - name: Configure GMT
        run: bash ci/config-gmt-unix.sh
        env:
          TEST: ${{ matrix.RUN_TESTS }}
          BUILD_DOCS: ${{ matrix.BUILD_DOCS }}

      - name: Compile GMT
        run: |
          mkdir -p build
          cd build
          cmake -G Ninja ..
          cmake --build .
